plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'tech.onlycoders'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
    implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation ("org.springframework.boot:spring-boot-starter-web") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    implementation "org.springframework.boot:spring-boot-starter-jetty"
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    compile 'joda-time:joda-time:2.10.10'

    compile 'org.liquigraph:liquigraph-spring-boot-starter:4.0.2'
    compile 'org.neo4j:neo4j-jdbc-bolt:4.0.1'

    compile 'org.springdoc:springdoc-openapi-ui:1.5.8'

    compile 'com.google.firebase:firebase-admin:7.1.1'

    compile 'io.jsonwebtoken:jjwt:0.9.1'
    compile 'javax.xml.bind:jaxb-api:2.3.1'

    compile 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testCompile 'org.jeasy:easy-random-core:5.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'


    compile 'org.liquigraph:liquigraph-spring-boot-starter:4.0.2'
    compile 'org.neo4j:neo4j-jdbc-bolt:4.0.1'

    compile 'org.springdoc:springdoc-openapi-ui:1.5.8'

    compile 'com.google.firebase:firebase-admin:7.1.1'

    compile 'io.jsonwebtoken:jjwt:0.9.1'
    compile 'javax.xml.bind:jaxb-api:2.3.1'

    compile 'org.mapstruct:mapstruct:1.4.2.Final'
    compileOnly 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testCompile 'org.jeasy:easy-random-core:5.0.0'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}

compileJava {
    options.compilerArgs += [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
//			'-Amapstruct.verbose=true'
    ]
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            includes = ['tech.onlycoders.backend.service.*']

            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.8
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification